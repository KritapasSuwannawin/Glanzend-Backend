CREATE TABLE product (
  id SERIAL PRIMARY KEY,
  name character varying(255),
  collection_id integer,
  category_id integer,
  color_id_arr integer[] DEFAULT array[]::integer[],
  size_id_arr integer[] DEFAULT array[]::integer[],
  price integer,
  is_in_stock boolean
);

CREATE TABLE collection (
  id SERIAL PRIMARY KEY,
  name character varying(255)
);

CREATE TABLE category (
  id SERIAL PRIMARY KEY,
  name character varying(255)
);

CREATE TABLE color (
  id SERIAL PRIMARY KEY,
  code character varying(255),
  name character varying(255)
);

CREATE TABLE size (
  id SERIAL PRIMARY KEY,
  name character varying(255)
);

CREATE TABLE line_item (
  id SERIAL PRIMARY KEY,
  product_id integer,
  quantity integer,
  size_id integer,
  color_id integer,
  type character varying(255),
  is_checked boolean,
  account_id integer
);

CREATE TABLE account (
  id SERIAL PRIMARY KEY,
  first_name character varying(255),
  last_name character varying(255),
  address character varying(255),
  zip_code character varying(255),
  city character varying(255),
  country character varying(255),
  phone_number character varying(255),
  email character varying(255),
  password character varying(255),
  order_id_arr integer[] DEFAULT array[]::integer[],
  wishlist_line_item_id_arr integer[] DEFAULT array[]::integer[],
  cart_line_item_id_arr integer[] DEFAULT array[]::integer[]
);

CREATE TABLE sale_order (
  id SERIAL PRIMARY KEY,
  line_item_id_arr integer[] DEFAULT array[]::integer[],
  order_date date,
  account_id integer,
  first_name character varying(255),
  last_name character varying(255),
  address character varying(255),
  zip_code character varying(255),
  city character varying(255),
  country character varying(255),
  phone_number character varying(255),
  email character varying(255)
);

INSERT INTO product(name, collection_id, category_id, color_id_arr, size_id_arr, price, is_in_stock) VALUES
  ('silver bracelet', 1, 3, ARRAY [10,1,14,9,4], ARRAY [1, 2, 3], 70, true),
  ('gold ring', 1, 1, ARRAY [13,4,10,8], ARRAY [1, 2, 3], 20, true),
  ('copper earrings', 1, 2, ARRAY [5,2,12], ARRAY [1, 2, 3], 80, true),
  ('metal waist chain', 1, 5, ARRAY [8,13,6,4,7], ARRAY [1, 2, 3], 60, true),
  ('diamond earrings', 1, 2, ARRAY [13,2,8,9,3], ARRAY [1, 2, 3], 60, true),
  ('titanium waist chain', 2, 5, ARRAY [3,1,13], ARRAY [1, 2, 3], 20, true),
  ('topaz necklace', 3, 4, ARRAY [10,1], ARRAY [1, 2, 3], 30, false),
  ('diamond waist chain', 1, 5, ARRAY [7,12,8], ARRAY [1, 2, 3], 100, true),
  ('zircon necklace', 3, 4, ARRAY [11,2], ARRAY [1, 2, 3], 80, true),
  ('topaz waist chain', 3, 5, ARRAY [8,2,11], ARRAY [1, 2, 3], 45, true),
  ('wood bracelet', 3, 3, ARRAY [15,11], ARRAY [1, 2, 3], 120, true),
  ('aluminium necklace', 2, 4, ARRAY [13,14,7,4,2], ARRAY [1, 2, 3], 120, true),
  ('diamond ring', 1, 1, ARRAY [12,8,13], ARRAY [1, 2, 3], 85, true),
  ('brass earrings', 3, 2, ARRAY [15,12,4,2,10], ARRAY [1, 2, 3], 80, true),
  ('titanium earrings', 2, 2, ARRAY [7,15,11,14,1], ARRAY [1, 2, 3], 95, false),
  ('silver ring', 1, 1, ARRAY [12,14], ARRAY [1, 2, 3], 95, true),
  ('silver necklace', 1, 4, ARRAY [1,11,5], ARRAY [1, 2, 3], 55, true),
  ('platinum earrings', 2, 2, ARRAY [13,9,8], ARRAY [1, 2, 3], 50, true),
  ('glass necklace', 3, 4, ARRAY [9,6,7,14], ARRAY [1, 2, 3], 45, true),
  ('platinum waist chain', 2, 5, ARRAY [1,2,12,5,3], ARRAY [1, 2, 3], 125, true),
  ('textile earrings', 2, 2, ARRAY [7,5,11,3], ARRAY [1, 2, 3], 30, true),
  ('glass ring', 3, 1, ARRAY [3,12], ARRAY [1, 2, 3], 75, true),
  ('topaz ring', 3, 1, ARRAY [7,5,12,8], ARRAY [1, 2, 3], 40, true),
  ('zircon ring', 3, 1, ARRAY [9,4], ARRAY [1, 2, 3], 95, true),
  ('wood earrings', 3, 2, ARRAY [14,9,12,1,13], ARRAY [1, 2, 3], 100, true),
  ('silver earrings', 1, 2, ARRAY [4,10,15,5], ARRAY [1, 2, 3], 50, false),
  ('copper necklace', 1, 4, ARRAY [2,14], ARRAY [1, 2, 3], 50, true),
  ('platinum ring', 2, 1, ARRAY [12,5,4,14], ARRAY [1, 2, 3], 70, true),
  ('metal ring', 1, 1, ARRAY [7,12], ARRAY [1, 2, 3], 40, true),
  ('wood necklace', 3, 4, ARRAY [2,10,13], ARRAY [1, 2, 3], 120, true),
  ('textile ring', 2, 1, ARRAY [3,5,11,7], ARRAY [1, 2, 3], 40, false),
  ('textile necklace', 2, 4, ARRAY [9,12,15,5,10], ARRAY [1, 2, 3], 95, true),
  ('wood waist chain', 3, 5, ARRAY [10,9,11], ARRAY [1, 2, 3], 30, true),
  ('pearl ring', 2, 1, ARRAY [13,1,7,5], ARRAY [1, 2, 3], 55, true),
  ('aluminium waist chain', 2, 5, ARRAY [2,8], ARRAY [1, 2, 3], 100, true),
  ('titanium bracelet', 2, 3, ARRAY [2,8], ARRAY [1, 2, 3], 35, true),
  ('metal bracelet', 1, 3, ARRAY [5,4], ARRAY [1, 2, 3], 70, true),
  ('zircon waist chain', 3, 5, ARRAY [12,3], ARRAY [1, 2, 3], 100, true),
  ('pearl necklace', 2, 4, ARRAY [14,11,4,10], ARRAY [1, 2, 3], 65, true),
  ('textile waist chain', 2, 5, ARRAY [9,4,12,3], ARRAY [1, 2, 3], 60, true),
  ('textile bracelet', 2, 3, ARRAY [11,15,2,4,7], ARRAY [1, 2, 3], 40, true),
  ('gold bracelet', 1, 3, ARRAY [8,15,1,3], ARRAY [1, 2, 3], 100, true),
  ('topaz earrings', 3, 2, ARRAY [2,10,5,3,14], ARRAY [1, 2, 3], 40, true),
  ('aluminium bracelet', 2, 3, ARRAY [7,4,15,3], ARRAY [1, 2, 3], 100, true),
  ('glass earrings', 3, 2, ARRAY [2,6,9], ARRAY [1, 2, 3], 70, true),
  ('aluminium earrings', 2, 2, ARRAY [8,10,6], ARRAY [1, 2, 3], 100, true),
  ('zircon earrings', 3, 2, ARRAY [12,11,14,6], ARRAY [1, 2, 3], 80, true),
  ('brass bracelet', 3, 3, ARRAY [5,10,1,9], ARRAY [1, 2, 3], 90, false),
  ('gold necklace', 1, 4, ARRAY [13,9,8,1], ARRAY [1, 2, 3], 70, true),
  ('silver waist chain', 1, 5, ARRAY [13,12,3,14], ARRAY [1, 2, 3], 50, true),
  ('platinum necklace', 2, 4, ARRAY [9,14], ARRAY [1, 2, 3], 20, true),
  ('aluminium ring', 2, 1, ARRAY [4,7], ARRAY [1, 2, 3], 50, true),
  ('metal necklace', 1, 4, ARRAY [14,5,6,7,1], ARRAY [1, 2, 3], 20, true),
  ('copper ring', 1, 1, ARRAY [4,10,13,2,8], ARRAY [1, 2, 3], 125, true),
  ('platinum bracelet', 2, 3, ARRAY [14,3,10,12], ARRAY [1, 2, 3], 90, true),
  ('zircon bracelet', 3, 3, ARRAY [1,8], ARRAY [1, 2, 3], 35, false),
  ('brass ring', 3, 1, ARRAY [1,9,3,6], ARRAY [1, 2, 3], 25, true),
  ('titanium ring', 2, 1, ARRAY [9,12,1,15], ARRAY [1, 2, 3], 80, false),
  ('topaz bracelet', 3, 3, ARRAY [5,10,6], ARRAY [1, 2, 3], 70, true),
  ('pearl bracelet', 2, 3, ARRAY [11,14,5], ARRAY [1, 2, 3], 120, true),
  ('brass waist chain', 3, 5, ARRAY [6,9,8], ARRAY [1, 2, 3], 45, true),
  ('pearl earrings', 2, 2, ARRAY [12,7,1,10], ARRAY [1, 2, 3], 95, false),
  ('brass necklace', 3, 4, ARRAY [11,2,9], ARRAY [1, 2, 3], 85, true),
  ('titanium necklace', 2, 4, ARRAY [9,11], ARRAY [1, 2, 3], 95, false),
  ('wood ring', 3, 1, ARRAY [3,1,15,8], ARRAY [1, 2, 3], 70, true),
  ('glass waist chain', 3, 5, ARRAY [12,3,4,7], ARRAY [1, 2, 3], 110, false),
  ('copper bracelet', 1, 3, ARRAY [14,8,6,13], ARRAY [1, 2, 3], 115, true),
  ('diamond necklace', 1, 4, ARRAY [1,10,8,9], ARRAY [1, 2, 3], 70, true),
  ('diamond bracelet', 1, 3, ARRAY [11,14,15], ARRAY [1, 2, 3], 65, true),
  ('glass bracelet', 3, 3, ARRAY [13,8], ARRAY [1, 2, 3], 95, true),
  ('metal earrings', 1, 2, ARRAY [5,3], ARRAY [1, 2, 3], 105, true),
  ('pearl waist chain', 2, 5, ARRAY [8,1,12], ARRAY [1, 2, 3], 70, true),
  ('copper waist chain', 1, 5, ARRAY [8,3], ARRAY [1, 2, 3], 40, true),
  ('gold waist chain', 1, 5, ARRAY [9,7,6], ARRAY [1, 2, 3], 30, false),
  ('gold earrings', 1, 2, ARRAY [3,9,12], ARRAY [1, 2, 3], 50, true);

INSERT INTO collection(name) VALUES
  ('autumn'),
  ('summer'),
  ('spring');

INSERT INTO category(name) VALUES
  ('rings'),
  ('earrings'),
  ('bracelets'),
  ('necklaces'),
  ('waist chains');

INSERT INTO color(code) VALUES
  ('#E52828', 'red'),
  ('#5E5B5B', 'black'),
  ('#FDC4DF', 'light pink'),
  ('#F1DBBA', 'light brown'),
  ('#C4A370', 'brown'),
  ('#A4B2CE', 'blue'),
  ('#A7D3A0', 'dark green'),
  ('#C4C4C4', 'grey'),
  ('#F08080', 'light red'),
  ('#FF69B4', 'pink'),
  ('#FF7F50', 'orange'),
  ('#FFDAB9', 'nude'),
  ('#EE82EE', 'purple'),
  ('#9370DB', 'violet'),
  ('#98FB98', 'green');

INSERT INTO size(name) VALUES
  ('S'),
  ('M'),
  ('L');

INSERT INTO line_item(product_id, quantity, size_id, color_id, type, is_checked, account_id) VALUES
  ();

INSERT INTO account(first_name, last_name, address, zip_code, city, country, phone_number, email, password, order_id_arr, wishlist_line_item_id_arr, cart_line_item_id_arr) VALUES
  ();

INSERT INTO sale_order(line_item_id_arr, order_date, account_id, first_name, last_name, address, zip_code, city, country, phone_number, email) VALUES
  ();

--- register account ---

CREATE OR REPLACE FUNCTION register_account(in_first_name character varying(255), in_last_name character varying(255), in_phone_number character varying(255), in_email character varying(255), in_password character varying(255))
  RETURNS integer 
  LANGUAGE plpgsql
  AS
$$
BEGIN
  IF EXISTS (SELECT * FROM account WHERE email = in_email) THEN
    RETURN -1;
  ELSE
    INSERT INTO account(first_name, last_name, phone_number, email, password) VALUES (in_first_name, in_last_name, in_phone_number, in_email, MD5(in_password));
    RETURN (SELECT id FROM account WHERE email = in_email);
  END IF;
END;
$$

--- login account ---

CREATE OR REPLACE FUNCTION login_account(in_email character varying(255), in_password character varying(255))
  RETURNS integer 
  LANGUAGE plpgsql
  AS
$$
BEGIN
  IF EXISTS (SELECT id FROM account WHERE email = in_email AND password = MD5(in_password)) THEN
    RETURN (SELECT id FROM account WHERE email = in_email AND password = MD5(in_password));
  ELSE
    IF NOT EXISTS (SELECT * FROM account WHERE email = in_email) THEN
      RETURN -1;
    ELSE
      RETURN 0;
    END IF;
  END IF;
END;
$$

--- wishlist ---

CREATE OR REPLACE FUNCTION insert_wishlist_line_item (in_account_id integer, in_product_id integer, in_quantity integer, in_size_id integer, in_color_id integer)
  RETURNS integer 
  LANGUAGE plpgsql
  AS
$$
DECLARE
  line_item_id integer;
  return_value integer;
BEGIN
  FOREACH line_item_id IN ARRAY (SELECT wishlist_line_item_id_arr FROM account WHERE id = in_account_id)
  LOOP
    IF (SELECT product_id from line_item WHERE id = line_item_id) = in_product_id THEN
      RETURN -1;
    END IF;
  END LOOP;
  
  FOREACH line_item_id IN ARRAY (SELECT cart_line_item_id_arr FROM account WHERE id = in_account_id)
  LOOP
    IF (SELECT product_id from line_item WHERE id = line_item_id) = in_product_id THEN
      UPDATE account SET cart_line_item_id_arr = array_remove(cart_line_item_id_arr, line_item_id) WHERE id = in_account_id;
      DELETE FROM line_item WHERE id = line_item_id;
    END IF;
  END LOOP;

  INSERT INTO line_item(product_id, quantity, size_id, color_id, type, is_checked, account_id) VALUES (in_product_id, in_quantity, in_size_id, in_color_id, 'wishlist', false, in_account_id);

  return_value := (SELECT id FROM line_item WHERE product_id = in_product_id AND type = 'wishlist' AND account_id = in_account_id);

  UPDATE account SET wishlist_line_item_id_arr = array_append(wishlist_line_item_id_arr, return_value) WHERE id = in_account_id;
  RETURN return_value;
END;
$$

--- line item ---

CREATE OR REPLACE PROCEDURE delete_line_item(in_item_id integer, in_account_id integer, in_type character varying(255))
  LANGUAGE plpgsql
  AS 
$$
BEGIN
  DELETE FROM line_item WHERE id = in_item_id;
  IF in_type = 'wishlist' THEN
    UPDATE account SET wishlist_line_item_id_arr = array_remove(wishlist_line_item_id_arr, in_item_id) WHERE id = in_account_id;
  ELSIF in_type = 'cart' THEN
    UPDATE account SET cart_line_item_id_arr = array_remove(cart_line_item_id_arr, in_item_id) WHERE id = in_account_id;
  END IF;
END;
$$

--- add wishlist to cart ---

CREATE OR REPLACE PROCEDURE add_wishlist_to_cart (in_account_id integer, in_line_item_id_arr integer[])
  LANGUAGE plpgsql
  AS
$$
DECLARE
  line_item_id integer;
BEGIN
  FOREACH line_item_id IN ARRAY in_line_item_id_arr
  LOOP
    UPDATE account SET wishlist_line_item_id_arr = array_remove(wishlist_line_item_id_arr, line_item_id) WHERE id = in_account_id;
    UPDATE account SET cart_line_item_id_arr = array_append(cart_line_item_id_arr, line_item_id) WHERE id = in_account_id;
    UPDATE line_item SET type = 'cart', is_checked = false WHERE id = line_item_id;
  END LOOP;
END;
$$

--- cart ---

CREATE OR REPLACE FUNCTION insert_cart_line_item (in_account_id integer, in_product_id integer, in_quantity integer, in_size_id integer, in_color_id integer)
  RETURNS integer 
  LANGUAGE plpgsql
  AS
$$
DECLARE
  line_item_id integer;
  return_value integer;
BEGIN
  FOREACH line_item_id IN ARRAY (SELECT cart_line_item_id_arr FROM account WHERE id = in_account_id)
  LOOP
    IF (SELECT product_id from line_item WHERE id = line_item_id) = in_product_id THEN
      RETURN -1;
    END IF;
  END LOOP;
  
  FOREACH line_item_id IN ARRAY (SELECT wishlist_line_item_id_arr FROM account WHERE id = in_account_id)
  LOOP
    IF (SELECT product_id from line_item WHERE id = line_item_id) = in_product_id THEN
      UPDATE account SET wishlist_line_item_id_arr = array_remove(wishlist_line_item_id_arr, line_item_id) WHERE id = in_account_id;
    DELETE FROM line_item WHERE id = line_item_id;
    END IF;
  END LOOP;

  INSERT INTO line_item(product_id, quantity, size_id, color_id, type, is_checked, account_id) VALUES (in_product_id, in_quantity, in_size_id, in_color_id, 'cart', false, in_account_id);

  return_value := (SELECT id FROM line_item WHERE product_id = in_product_id AND type = 'cart' AND account_id = in_account_id);

  UPDATE account SET cart_line_item_id_arr = array_append(cart_line_item_id_arr, return_value) WHERE id = in_account_id;
  RETURN return_value;
END;
$$

--- checkout ---

CREATE OR REPLACE PROCEDURE checkout (in_account_id integer, in_line_item_id_arr integer[], in_first_name character varying(255), in_last_name character varying(255), in_address character varying(255), in_zip_code character varying(255), in_city character varying(255), in_country character varying(255), in_phone_number character varying(255), in_email character varying(255))
  LANGUAGE plpgsql
  AS
$$
DECLARE
  line_item_id integer;
BEGIN
  FOREACH line_item_id IN ARRAY in_line_item_id_arr
  LOOP
    UPDATE account SET cart_line_item_id_arr = array_remove(cart_line_item_id_arr, line_item_id) WHERE id = in_account_id;
    UPDATE line_item SET type = 'order' WHERE id = line_item_id;
  END LOOP;

  INSERT INTO sale_order(line_item_id_arr, order_date, account_id, first_name, last_name, address, zip_code, city, country, phone_number, email) VALUES (in_line_item_id_arr, CURRENT_DATE, in_account_id, in_first_name, in_last_name, in_address, in_zip_code, in_city, in_country, in_phone_number, in_email);

  UPDATE account SET order_id_arr = array_append(
    order_id_arr, (SELECT id FROM sale_order WHERE line_item_id_arr = in_line_item_id_arr)
  ) WHERE id = in_account_id;
END;
$$

--- instant buy ---

CREATE OR REPLACE PROCEDURE instant_buy (in_product_id integer, in_quantity integer, in_size_id integer, in_color_id integer, in_account_id integer, in_first_name character varying(255), in_last_name character varying(255), in_address character varying(255), in_zip_code character varying(255), in_city character varying(255), in_country character varying(255), in_phone_number character varying(255), in_email character varying(255))
  LANGUAGE plpgsql
  AS
$$
DECLARE
  line_item_id integer;
BEGIN
  INSERT INTO line_item(product_id, quantity, size_id, color_id, type, is_checked, account_id) VALUES (in_product_id, in_quantity, in_size_id, in_color_id, 'instant buy', true, in_account_id);

  line_item_id := (SELECT id FROM line_item WHERE type = 'instant buy' AND account_id = in_account_id);

  UPDATE line_item SET type = 'order' WHERE id = line_item_id;

  INSERT INTO sale_order(line_item_id_arr, order_date, account_id, first_name, last_name, address, zip_code, city, country, phone_number, email) VALUES (ARRAY[line_item_id], CURRENT_DATE, in_account_id, in_first_name, in_last_name, in_address, in_zip_code, in_city, in_country, in_phone_number, in_email);

  UPDATE account SET order_id_arr = array_append(
    order_id_arr, (SELECT id FROM sale_order WHERE line_item_id_arr = ARRAY[line_item_id])
  ) WHERE id = in_account_id;
END;
$$
